fit =  glm(mpg01 ~  year + horsepower + weight + acceleration, family = "binomial", data = train)
preds = predict(fit, test, type = "response")
preds = preds > 0.5
mean(preds != test$mpg01)
#c
# split ratio 8:2
set.seed(12)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#c
# split ratio 8:2
set.seed(12345)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#c
# split ratio 8:2
set.seed(321)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#e QDA
fit = qda(mpg01 ~ year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#f logistic regression
fit =  glm(mpg01 ~  year + horsepower + weight + acceleration, family = "binomial", data = train)
preds = predict(fit, test, type = "response")
preds = preds > 0.5
mean(preds != test$mpg01)
#f logistic regression
fit =  glm(mpg01 ~  year + horsepower + weight + acceleration, family = "binomial", data = train)
preds = predict(fit, test, type = "response")
preds
preds = preds > 0.5
preds
preds = predict(fit, test, type = "link")
preds
preds = predict(fit, test, type = "f")
preds = predict(fit, test, type = "terms")
preds
preds = predict(fit, test, type = "response")
preds = preds > 0.5
mean(preds != test$mpg01)
#g KNN
train.knn <- dat[train_ind, -c(1,2,3,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,3,4,9,10)]
K = 50
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
#we see K=15 give us the smallest test error
which(test.error == min(test.error))
test.error[15]
#c
# split ratio 8:2
set.seed(4)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#c
# split ratio 8:2
set.seed(5)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#c
# split ratio 8:2
set.seed(6)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#e QDA
fit = qda(mpg01 ~ year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#f logistic regression
fit =  glm(mpg01 ~  year + horsepower + weight + acceleration, family = "binomial", data = train)
preds = predict(fit, test, type = "response")
preds = preds > 0.5
mean(preds != test$mpg01)
#g KNN
train.knn <- dat[train_ind, -c(1,2,3,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,3,4,9,10)]
K = 50
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
#we see K=15 give us the smallest test error
which(test.error == min(test.error))
test.error[15]
#c
# split ratio 8:2
set.seed(7)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#e QDA
fit = qda(mpg01 ~ year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#f logistic regression
fit =  glm(mpg01 ~  year + horsepower + weight + acceleration, family = "binomial", data = train)
preds = predict(fit, test, type = "response")
preds = preds > 0.5
mean(preds != test$mpg01)
#g KNN
train.knn <- dat[train_ind, -c(1,2,3,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,3,4,9,10)]
K = 50
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
#we see K=14 give us the smallest test error
which(test.error == min(test.error))
test.error[14]
#we see K=14 give us the smallest test error
which(test.error == min(test.error))
test.error[4]
mean(preds$class == test$mpg01)
mean(preds$class == test$mpg01)
#e QDA
fit = qda(mpg01 ~ year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
mean(preds$class == test$mpg01)
#d LDA
fit = lda(mpg01 ~ year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#d LDA
fit = lda(mpg01 ~ horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#d LDA
fit = lda(mpg01 ~ cylinders+year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#e QDA
fit = qda(mpg01 ~ cylinders +year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#f logistic regression
fit =  glm(mpg01 ~ cylinders + year + horsepower + weight + acceleration, family = "binomial", data = train)
preds = predict(fit, test, type = "response")
preds = preds > 0.5
mean(preds != test$mpg01)
#g KNN
train.knn <- dat[train_ind, -c(1,2,3,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,3,4,9,10)]
K = 50
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
#we see K=14 give us the smallest test error
which(test.error == min(test.error))
test.error[4]
View(train.knn)
#g KNN
train.knn <- dat[train_ind, -c(1,2,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,4,9,10)]
K = 50
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
#we see K=14 give us the smallest test error
which(test.error == min(test.error))
test.error[4]
View(train.knn)
#we see K=14 give us the smallest test error
which(test.error == min(test.error))
test.error[4]
#f logistic regression
fit =  glm(mpg01 ~ cylinders + year + horsepower + weight + acceleration, family = "binomial", data = train)
preds = predict(fit, test, type = "response")
preds = preds > 0.5
mean(preds != test$mpg01)
#c
# split ratio 8:2
set.seed(8)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ cylinders + year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#e QDA
fit = qda(mpg01 ~ cylinders +year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#c
# split ratio 8:2
set.seed(9)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ cylinders + year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#e QDA
fit = qda(mpg01 ~ cylinders +year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#f logistic regression
fit =  glm(mpg01 ~ cylinders + year + horsepower + weight + acceleration, family = "binomial", data = train)
preds = predict(fit, test, type = "response")
preds = preds > 0.5
mean(preds != test$mpg01)
#g KNN
train.knn <- dat[train_ind, -c(1,2,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,4,9,10)]
K = 50
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
#we see K=14 give us the smallest test error
which(test.error == min(test.error))
test.error[4]
#we see K=14 give us the smallest test error
which(test.error == min(test.error))
#c
# split ratio 8:2
set.seed(10)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ cylinders + year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#c
# split ratio 8:2
set.seed(11)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ cylinders + year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#c
# split ratio 8:2
set.seed(12)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ cylinders + year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#c
# split ratio 8:2
set.seed(13)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ cylinders + year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#c
# split ratio 8:2
set.seed(14)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ cylinders + year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#c
# split ratio 8:2
set.seed(15)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ cylinders + year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#e QDA
fit = qda(mpg01 ~ cylinders +year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#e QDA
fit = qda(mpg01 ~ cylinders +year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#f logistic regression
fit =  glm(mpg01 ~ cylinders + year + horsepower + weight + acceleration,
family = "binomial", data = train)
preds = predict(fit, test, type = "response")
preds = preds > 0.5
mean(preds != test$mpg01)
#g KNN
train.knn <- dat[train_ind, -c(1,2,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,4,9,10)]
K = 50
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
which(test.error == min(test.error))
test.error[4]
which(test.error == min(test.error))
test.error[3]
#c
# split ratio 8:2
set.seed(16)
train_ind <- sample(seq_len(nrow(dat)), size = nrow(dat)*0.8)
train <- dat[train_ind, ]
test <- dat[-train_ind, ]
#d LDA
fit = lda(mpg01 ~ cylinders + year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#e QDA
fit = qda(mpg01 ~ cylinders +year + horsepower + weight + acceleration, data=train)
preds = predict(fit, test)
mean(preds$class != test$mpg01)
#f logistic regression
fit =  glm(mpg01 ~ cylinders + year + horsepower + weight + acceleration,
family = "binomial", data = train)
preds = predict(fit, test, type = "response")
preds = preds > 0.5
mean(preds != test$mpg01)
#g KNN
train.knn <- dat[train_ind, -c(1,2,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,4,9,10)]
K = 50
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
which(test.error == min(test.error))
test.error[3]
#g KNN
train.knn <- dat[train_ind, -c(1,2,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,4,9,10)]
K = 20
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
which(test.error == min(test.error))
test.error[3]
#g KNN
train.knn <- dat[train_ind, -c(1,2,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,4,9,10)]
K = 30
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
which(test.error == min(test.error))
test.error[3]
which(test.error == min(test.error))
test.error[22]
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
library(reshape2)
library(ggplot2)
library(MASS)
library(class)
#g KNN
train.knn <- dat[train_ind, -c(1,2,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,4,9,10)]
K = 30
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
which(test.error == min(test.error))
test.error[22]
#g KNN
train.knn <- dat[train_ind, -c(1,2,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,4,9,10)]
K = 30
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
which(test.error == min(test.error))
test.error[22]
#g KNN
train.knn <- dat[train_ind, -c(1,2,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,4,9,10)]
K = 30
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
which(test.error == min(test.error))
test.error[22]
View(train.knn)
#g KNN
train.knn <- dat[train_ind, -c(1,2,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,4,9,10)]
K = 30
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
which(test.error == min(test.error))
test.error[22]
View(train.knn)
#g KNN
train.knn <- dat[train_ind, -c(1,2,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,4,9,10)]
K = 30
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
which(test.error == min(test.error))
test.error[22]
View(train.knn)
which(test.error == min(test.error))
#g KNN
set.seed(16)
train.knn <- dat[train_ind, -c(1,2,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,4,9,10)]
K = 30
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
which(test.error == min(test.error))
test.error[22]
#g KNN
set.seed(16)
train.knn <- dat[train_ind, -c(1,2,4,9,10)]
test.knn <- dat[-train_ind, -c(1,2,4,9,10)]
K = 30
test.error = rep(0, K)
for (i in 1:K) {
preds = knn(train.knn, test.knn, cl=dat[train_ind, "mpg01"], k = i)
test.error[i] = mean(preds != test$mpg01)
}
plot(test.error, x=1:K)
which(test.error == min(test.error))
test.error[22]
which(test.error == min(test.error))
