#2.1 NBA teams dataset
dataset <- read.csv("nba-teams-2017.csv", stringsAsFactors = FALSE)
# uncomment get some info
str(dataset, vec.len = 1)
View(dataset)
variables <- c(
'wins',
'losses',
'points',
'field_goals',
'points3',
'free_throws',
'off_rebounds',
'def_rebounds',
'assists',
'steals',
'blocks',
'personal_fouls')
dat <- dataset[ ,variables]
pca_prcomp <- prcomp(dat, scale. = TRUE)
pca_prcomp
svd(dat)
s = svd(dat)
s$d
s$d ** 2
eigen(t(dat) %*% dat)
as.matrix(dat)
dd = as.matrix(dat)
eigen(t(dd) %*% dd)
ee = eigen(t(dd) %*% dd)$values
ee
s$d ** 2
dim(dat)
ee = eigen(dd %*% t(dd))$values
ee
eigen(dd %*% t(dd))
dim(dat)
`loadings':pca_prcomp
+
)
)
)))
))
fsdf
=fsdf
;
.,
.
,!!!
pca_prcomp
pca_prcomp
))))
===
===
-
\\
///
~~~
eigenvalues =  pca_prcomp$sdev ** 2
eigenvalues
dd
ss
ee
eigenvalues =  pca_prcomp$sdev ^ 2
eigenvalues
eigen(t(dd) %*% dd)
eigen(t(dd) %*% dd)$values
eigen(t(dd) %*% dd)$values/30
eigen(t(dd) %*% dd)$values/12
eigenvalues
pca_prcomp <- prcomp(dat, scale. = TRUE)
pca_prcomp
eigenvalues =  pca_prcomp$sdev ^ 2
loadings = pca_prcomp$rotation
scores = pca_prcomp$x
#2.2.1 Basic Manipulations
scores[,12]
loadings[,12]
loadings
#2.2.2 Proportion of Variance Explained and Screeplot
colSums(loadings)
#2.2.2 Proportion of Variance Explained and Screeplot
colSums(abs(loadings))
#2.2.2 Proportion of Variance Explained and Screeplot
colSums(abs(loadings)) /sum(colSums(abs(loadings)))
#2.2.2 Proportion of Variance Explained and Screeplot
colSums(abs(loadings))
#2.2.2 Proportion of Variance Explained and Screeplot
prob.table(colSums(abs(loadings)))
#2.2.2 Proportion of Variance Explained and Screeplot
prob.table(colSums(abs(loadings)))
prob.table
prop.table()
#2.2.2 Proportion of Variance Explained and Screeplot
prop.table(colSums(abs(loadings)))
sum(prop.table(colSums(abs(loadings))))
plot(prop.table(colSums(abs(loadings)))
)
#2.2.2 Proportion of Variance Explained and Screeplot
prop.table(eigenvalues)
sum(prop.table())
sum(prop.table(eigenvalues))
#2.2.2 Proportion of Variance Explained and Screeplot
a = prop.table(eigenvalues)
plot(a)
cumsum(a)
plot(b)
#2.2.2 Proportion of Variance Explained and Screeplot
a = prop.table(eigenvalues)
b = cumsum(a)
plot(b)
b <= 0.7
b >= 0.7
# four PCs capture 70%
eigenvalues >= 1
mean(eigenvalues)
ggplot() + geom_point(aes(x = 1:length(eigenvalues), y=eigs_cum)) +
labs(x = "first PCs", y = "fraction of total variance explained")
library(ggplo2)
library(ggplo22)
library(ggplot2)
library(ggplot2)
ggplot() + geom_point(aes(x = 1:length(eigenvalues), y=eigs_cum)) +
labs(x = "first PCs", y = "fraction of total variance explained")
eigs_cum = cumsum(eigenvalues)
library(ggplot2)
eigs_cum = cumsum(eigenvalues)
ggplot() + geom_point(aes(x = 1:length(eigenvalues), y=eigs_cum)) +
labs(x = "first PCs", y = "fraction of total variance explained")
ggplot() + geom_point(aes(x = scores[, 1], y=scores[, 2])) +
geom_text(aes(x = scores[, 1], y=scores[, 2], label=dataset$team)) +
labs(x = "PC1", y = "PC2")
library(plotly)
scores_df = cbind.data.frame(scores, team=dataset$team, stringsAsFactors=FALSE)
library(plotly)
scores_df = cbind.data.frame(scores, team=dataset$team, stringsAsFactors=FALSE)
plot_ly(data=scores_df, x = ~PC1, y = ~PC2, z = ~PC3
type = 'scatter3d',
scores_df
plot_ly(data=scores_df, x = ~PC1, y = ~PC2, z = ~PC3,
type = 'scatter3d',
mode = 'markers',
text= ~team)
